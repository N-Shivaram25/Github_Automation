name: Run Code Tests

on:
  push:
    paths:
      - "solutions/**"
  pull_request:
    paths:
      - "tests/**"

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Ensure previous commit is available

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y gcc g++ openjdk-17-jdk python3 python3-pytest

      - name: Detect Changed Files
        id: changed-files
        run: |
          BEFORE_COMMIT="${{ github.event.before }}"
          if [ -z "$BEFORE_COMMIT" ] || ! git cat-file -e "$BEFORE_COMMIT"^{commit}; then
            BEFORE_COMMIT=$(git rev-parse HEAD~1)
          fi
          
          CHANGED_FILES=$(git diff --name-only "$BEFORE_COMMIT" HEAD)
          echo "Detected changed files: $CHANGED_FILES"
          
          if [ -z "$CHANGED_FILES" ]; then
            echo "No file changes detected. Exiting..."
            exit 1
          fi

          echo "CHANGED_FILES=$CHANGED_FILES" >> $GITHUB_ENV
          echo "::set-output name=changed_files::$CHANGED_FILES"

      - name: Determine File Type
        id: determine-file
        run: |
          if echo "$CHANGED_FILES" | grep -qE '\.c$'; then
            echo "language=C" >> $GITHUB_ENV
          elif echo "$CHANGED_FILES" | grep -qE '\.cpp$'; then
            echo "language=C++" >> $GITHUB_ENV
          elif echo "$CHANGED_FILES" | grep -qE '\.py$'; then
            echo "language=Python" >> $GITHUB_ENV
          elif echo "$CHANGED_FILES" | grep -qE '\.java$'; then
            echo "language=Java" >> $GITHUB_ENV
          else
            echo "No relevant file changes detected. Exiting..."
            exit 1
          fi

      - name: Compile and Run C Program
        if: env.language == 'C'
        run: |
          gcc solutions/*.c -o solution_c
          echo "Running C test cases..."
          ./solution_c < tests/test.c | tee test_results.log

      - name: Compile and Run C++ Program
        if: env.language == 'C++'
        run: |
          g++ solutions/*.cpp -o solution_cpp
          echo "Running C++ test cases..."
          ./solution_cpp < tests/test.cpp | tee test_results.log

      - name: Run Python Tests
        if: env.language == 'Python'
        run: |
          if [ ! -f solutions/*.py ]; then
            echo "Error: Python script not found!"
            exit 1
          fi
          echo "Running Python test cases..."
          python3 -m pytest tests/*.py --tb=short | tee test_results.log

      - name: Compile and Run Java Program
        if: env.language == 'Java'
        run: |
          javac -d solutions solutions/*.java
          echo "Running Java test cases..."
          java -cp solutions Solution < tests/Test.java | tee test_results.log

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test_results.log
